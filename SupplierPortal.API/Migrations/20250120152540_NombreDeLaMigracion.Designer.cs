// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplierPortal.API.Data;

#nullable disable

namespace SupplierPortal.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250120152540_NombreDeLaMigracion")]
    partial class NombreDeLaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupplierPortal.API.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Enlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Enlace = "https://example.com/producto1",
                            Nombre = "Producto 1",
                            PrecioUnitario = 10.5m
                        },
                        new
                        {
                            Id = 2,
                            Enlace = "https://example.com/producto2",
                            Nombre = "Producto 2",
                            PrecioUnitario = 20m
                        },
                        new
                        {
                            Id = 3,
                            Enlace = "https://example.com/producto3",
                            Nombre = "Producto 3",
                            PrecioUnitario = 15m
                        },
                        new
                        {
                            Id = 4,
                            Enlace = "https://example.com/producto4",
                            Nombre = "Producto 4",
                            PrecioUnitario = 50m
                        });
                });

            modelBuilder.Entity("SupplierPortal.API.Models.ProductoSolicitudCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudCompraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("SolicitudCompraId");

                    b.ToTable("ProductosSolicitudesCompra");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 2,
                            PrecioUnitario = 10.5m,
                            ProductoId = 1,
                            SolicitudCompraId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1,
                            PrecioUnitario = 20m,
                            ProductoId = 2,
                            SolicitudCompraId = 1
                        });
                });

            modelBuilder.Entity("SupplierPortal.API.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contacto = "contacto@proveedora.com",
                            Direccion = "Calle 123",
                            Nombre = "Proveedor A"
                        },
                        new
                        {
                            Id = 2,
                            Contacto = "contacto@proveedorb.com",
                            Direccion = "Avenida 456",
                            Nombre = "Proveedor B"
                        },
                        new
                        {
                            Id = 3,
                            Contacto = "contacto@proveedorc.com",
                            Direccion = "Pasaje 789",
                            Nombre = "Proveedor C"
                        });
                });

            modelBuilder.Entity("SupplierPortal.API.Models.SolicitudCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SolicitudesCompra");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = "Pendiente",
                            Fecha = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProveedorId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("SupplierPortal.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contraseña = "colocador123",
                            NombreUsuario = "colocador1",
                            Rol = "Colocador"
                        },
                        new
                        {
                            Id = 2,
                            Contraseña = "aprobador123",
                            NombreUsuario = "aprobador1",
                            Rol = "Aprobador"
                        });
                });

            modelBuilder.Entity("SupplierPortal.API.Models.ProductoSolicitudCompra", b =>
                {
                    b.HasOne("SupplierPortal.API.Models.Producto", "Producto")
                        .WithMany("Detalles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SupplierPortal.API.Models.SolicitudCompra", "SolicitudCompra")
                        .WithMany("Detalles")
                        .HasForeignKey("SolicitudCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("SolicitudCompra");
                });

            modelBuilder.Entity("SupplierPortal.API.Models.SolicitudCompra", b =>
                {
                    b.HasOne("SupplierPortal.API.Models.Proveedor", "Proveedor")
                        .WithMany("SolicitudesCompra")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplierPortal.API.Models.Usuario", "Usuario")
                        .WithMany("SolicitudesCompra")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SupplierPortal.API.Models.Producto", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("SupplierPortal.API.Models.Proveedor", b =>
                {
                    b.Navigation("SolicitudesCompra");
                });

            modelBuilder.Entity("SupplierPortal.API.Models.SolicitudCompra", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("SupplierPortal.API.Models.Usuario", b =>
                {
                    b.Navigation("SolicitudesCompra");
                });
#pragma warning restore 612, 618
        }
    }
}
